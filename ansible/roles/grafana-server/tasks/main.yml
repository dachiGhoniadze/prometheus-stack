---
tasks file for grafana-server
- name: Install the prerequisite packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - software-properties-common
    - wget
    - curl
    - gnupg2
    - ca-certificates
    - lsb-release
    - ubuntu-keyring

- name: Import grafana GPG key
  shell: |
    wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor -o /etc/apt/keyrings/grafana.gpg
  args:
    creates: /etc/apt/keyrings/grafana.gpg

- name: Add grafana APT repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main"
    state: present

- name: Update cache
  apt:
    update_cache: yes

- name: Install Grafana package
  apt:
    name: grafana
    state: present
    update_cache: yes

- name: Copying the grafana.ini config
  template:  
    src: templates/grafana.ini
    dest: "/etc/grafana"
    owner: root
    group: root

- name: add http_addr = 127.0.0.1 
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: 'http_addr ='
    line: "http_addr = 127.0.0.1"

- name: restart grafana
  service: 
    name: grafana-server
    state: restarted
    enabled: yes 


- name: Import an official nginx signing key
  shell: "curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null"

- name: set up the apt repository for stable nginx packages
  shell: "echo 'deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu $(lsb_release -cs) nginx' | sudo tee /etc/apt/sources.list.d/nginx.list"

- name: Update cache
  apt:
    update_cache: yes

- name: Install NGINX Open Source
  apt:
    name: nginx
    state: present

- name: restart nginx
  service: 
    name: nginx
    state: restarted
    enabled: yes 

- name: Remove default conf
  ansible.builtin.file:
    path: "/etc/nginx/conf.d/default.conf"
    state: absent

- name: config for nginx grafana
  template:
    src: grafana.conf.j2
    dest: "/etc/nginx/conf.d/grafana.conf"
  notify:
    - restart_nginx

- name: config for nginx prometheus
  template:
    src: prometheus.conf.j2
    dest: "/etc/nginx/conf.d/prometheus.conf"
  notify:
    - restart_nginx

- name: config for nginx alertmanager
  template:
    src: alertmanager.conf.j2
    dest: "/etc/nginx/conf.d/alermanager.conf"
  notify:
    - restart_nginx


